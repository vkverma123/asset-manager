{application,eventstore,
             [{applications,[kernel,stdlib,elixir,crypto,eex,logger,ssl,
                             elixir_uuid,fsm,gen_stage,postgrex]},
              {description,"Event store using PostgreSQL for persistence.\n"},
              {modules,['Elixir.EventStore','Elixir.EventStore.AdvisoryLocks',
                        'Elixir.EventStore.AdvisoryLocks.Lock',
                        'Elixir.EventStore.AdvisoryLocks.State',
                        'Elixir.EventStore.Application',
                        'Elixir.EventStore.Config',
                        'Elixir.EventStore.Config.Parser',
                        'Elixir.EventStore.Config.Store',
                        'Elixir.EventStore.EExIOListEngine',
                        'Elixir.EventStore.EventData',
                        'Elixir.EventStore.JsonSerializer',
                        'Elixir.EventStore.JsonbSerializer',
                        'Elixir.EventStore.MonitoredServer',
                        'Elixir.EventStore.MonitoredServer.State',
                        'Elixir.EventStore.Notifications.Listener',
                        'Elixir.EventStore.Notifications.Notification',
                        'Elixir.EventStore.Notifications.Publisher',
                        'Elixir.EventStore.Notifications.Publisher.State',
                        'Elixir.EventStore.Notifications.Supervisor',
                        'Elixir.EventStore.PostgresTypes',
                        'Elixir.EventStore.PubSub',
                        'Elixir.EventStore.RecordedEvent',
                        'Elixir.EventStore.Serializer',
                        'Elixir.EventStore.Snapshots.SnapshotData',
                        'Elixir.EventStore.Snapshots.Snapshotter',
                        'Elixir.EventStore.Sql.Init',
                        'Elixir.EventStore.Sql.Reset',
                        'Elixir.EventStore.Sql.Statements',
                        'Elixir.EventStore.Storage',
                        'Elixir.EventStore.Storage.Appender',
                        'Elixir.EventStore.Storage.CreateStream',
                        'Elixir.EventStore.Storage.Database',
                        'Elixir.EventStore.Storage.DeleteStream',
                        'Elixir.EventStore.Storage.Initializer',
                        'Elixir.EventStore.Storage.Lock',
                        'Elixir.EventStore.Storage.QueryStreamInfo',
                        'Elixir.EventStore.Storage.Reader',
                        'Elixir.EventStore.Storage.Reader.EventAdapter',
                        'Elixir.EventStore.Storage.Reader.Query',
                        'Elixir.EventStore.Storage.Schema',
                        'Elixir.EventStore.Storage.Snapshot',
                        'Elixir.EventStore.Storage.Subscription',
                        'Elixir.EventStore.Storage.Subscription.Ack',
                        'Elixir.EventStore.Storage.Subscription.Adapter',
                        'Elixir.EventStore.Storage.Subscription.All',
                        'Elixir.EventStore.Storage.Subscription.Delete',
                        'Elixir.EventStore.Storage.Subscription.Query',
                        'Elixir.EventStore.Storage.Subscription.Subscribe',
                        'Elixir.EventStore.Streams.Stream',
                        'Elixir.EventStore.Streams.StreamInfo',
                        'Elixir.EventStore.Subscriptions',
                        'Elixir.EventStore.Subscriptions.Subscriber',
                        'Elixir.EventStore.Subscriptions.Subscription',
                        'Elixir.EventStore.Subscriptions.SubscriptionFsm',
                        'Elixir.EventStore.Subscriptions.SubscriptionState',
                        'Elixir.EventStore.Subscriptions.Supervisor',
                        'Elixir.EventStore.Supervisor',
                        'Elixir.EventStore.Tasks.Create',
                        'Elixir.EventStore.Tasks.Drop',
                        'Elixir.EventStore.Tasks.Init',
                        'Elixir.EventStore.Tasks.Migrate',
                        'Elixir.EventStore.Tasks.Migration',
                        'Elixir.EventStore.Tasks.Migrations',
                        'Elixir.EventStore.Tasks.Output',
                        'Elixir.EventStore.TermSerializer',
                        'Elixir.Mix.EventStore',
                        'Elixir.Mix.Tasks.EventStore.Create',
                        'Elixir.Mix.Tasks.EventStore.Drop',
                        'Elixir.Mix.Tasks.EventStore.Init',
                        'Elixir.Mix.Tasks.EventStore.Migrate',
                        'Elixir.Mix.Tasks.EventStore.Migrations']},
              {registered,[]},
              {vsn,"1.3.2"},
              {mod,{'Elixir.EventStore.Application',[]}}]}.
